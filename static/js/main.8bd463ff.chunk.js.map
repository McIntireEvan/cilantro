{"version":3,"sources":["pages/RecipeView.tsx","pages/CookbookView.tsx","Settings.ts","pages/SettingsView.tsx","pages/SearchView.tsx","components/Sidebar.tsx","pages/TagsView.tsx","App.tsx","index.tsx"],"names":["Tag","props","url","text","to","RecipeWrapper","id","useParams","x","Number","RecipeView","recipes","tagHTML","tags","map","tag","i","length","ingredients","className","amount","item","steps","s","title","serves","time","sourceURL","href","bodyText","src","imgUrl","alt","RecipeJSONLD","recipe","data","join","type","JSON","stringify","CookbookView","tiles","r","body","SettingsContext","React","createContext","dataRootURL","indexFile","theme","sidebarCompact","SettingsView","settings","useContext","useState","selectedTheme","setSelectedTheme","compactSidebar","setCompactSidebar","useEffect","onUpdate","updateCompact","name","value","checked","onChange","options","includeScore","keys","weight","SearchView","searchText","setSearchText","filteredRecipes","setFilteredRecipes","rec","Fuse","search","cookbook","evt","target","Sidebar","emoji","getEmoji","c","classNames","t","TagCloudView","index","push","tLinks","TagPageWrapper","tagbookData","parseChowdownMd","parsed","matter","console","log","split","trim","image","directions","yield","source","content","App","setCookbook","tagIndex","setTagIndex","process","setSettings","a","fetch","resp","recipeResp","recipeData","Promise","all","then","rs","book","load","mapping","makeTagGroups","undefined","Provider","basename","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bd463ff.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Ingredient, Recipe } from '../models';\nimport '../App.css';\n\nfunction Tag(props: {text: string}) {\n  const url = \"/tags/\" + props.text\n  return <Link to={url}>{props.text}</Link>\n}\n\nexport function RecipeWrapper(props: {recipes: Recipe[]}) {\n  const { id } = useParams<{id: string}>();\n  const x = Number(id);\n  return <RecipeView {...props.recipes[x]} />\n}\n\nexport default function RecipeView(props: Recipe) {\n  const tagHTML = props.tags.map((tag, i) => {\n    return (<span key={i}><Tag text={tag} />{(i + 1) !== props.tags.length ? \",\" : \"\"} </span>)\n  });\n\n  const ingredients = props.ingredients.map((i: Ingredient) => {\n    // TODO: Add hrecipe unit stuff\n    return (\n      <li className=\"ingredient p-ingredient\">\n        <span className=\"ingredient-amount\">{i.amount}</span>\n        <span className=\"ingredient-item\">{i.item}</span>\n      </li>\n    );\n  });\n\n  const steps = props.steps.map(s => {\n    return (\n      <li className=\"prep-step\">\n        <p className=\"prep-step-text\">{s}</p>\n      </li>\n    )\n  });\n\n  return (\n    <article className=\"recipe hRecipe h-recipe\">\n      <h1 className=\"recipe-title fn p-name\">{props.title}</h1>\n      <header className=\"recipe-meta\">\n        {props.serves && <span className=\"recipe-serves yield\">Yield {props.serves}</span>}\n        {props.time && <span className=\"recipe-time\">Time {props.time}</span>}\n        {props.sourceURL && <a href={props.sourceURL} className=\"recipe-source\">Source</a>}\n      </header>\n      <div className=\"recipe-info\">\n        <p className=\"recipe-description p-summary summary\">{props.bodyText}</p>\n        <img className=\"recipe-picture u-photo photo\" src={props.imgUrl} alt={props.title}/>\n      </div>\n      <div className=\"recipe-tags\">{tagHTML}</div>\n      <div className=\"recipe-body\">\n        <div className=\"recipe-ingredients\">\n          <h2>Ingredients</h2>\n          <ul className=\"ingredients-list\">{ingredients}</ul>\n        </div>\n        <div className=\"recipe-steps\">\n          <h2>Preparation</h2>\n          <ol className=\"prep-steps instructions e-instructions\">{steps}</ol>\n        </div>\n      </div>\n      <RecipeJSONLD recipe={props} />\n    </article>\n  );\n}\n\n// TODO: expand this\nfunction RecipeJSONLD(props: {recipe: Recipe}) {\n  const data = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Recipe\",\n    \"cookTime\": props.recipe.time,\n    \"description\": props.recipe.bodyText,\n    \"image\": props.recipe.imgUrl,\n    \"recipeIngredient\": props.recipe.ingredients,\n    \"name\": props.recipe.title,\n    \"recipeInstructions\": props.recipe.steps.join(\". \"),\n    \"recipeYield\": props.recipe.serves,\n  }\n  return <script type=\"application/ld+json\">\n    {JSON.stringify(data)}\n  </script>\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { CookbookData } from '../models';\n\nimport \"../App.css\"\n\nexport default function CookbookView(props: CookbookData) {\n    const tiles = props.recipes.map(r => {\n        const href = \"/r/\" + r.id\n        return (\n            <div className=\"collection-tile\">\n                <Link to={href}>{r.title}</Link>\n            </div>\n        )\n    });\n\n    return (\n        <div className=\"collection-holder\">\n            <h1 className=\"collection-title\">{props.title}</h1>\n            <pre className=\"collection-description\">{props.body}</pre>\n            <div className=\"collection\">\n            {tiles}\n        </div>\n        </div>\n    );\n}","import React from \"react\";\n\nexport interface AppSettings {\n  dataRootURL: string;\n  indexFile: string;\n  theme: string;\n  sidebarCompact: boolean;\n}\n\nexport const SettingsContext = React.createContext<AppSettings>({\n  // TODO: update\n  dataRootURL: \"http://localhost:3000/recipes/\", indexFile: \"README.md\", theme: \"light\", sidebarCompact: false,\n});\n\nexport function getEmoji(settings: AppSettings): string {\n  let emoji;\n  switch (settings.theme) {\n    case \"red\": {\n      emoji = \"🍎\";\n      break;\n    }\n    case \"blue\": {\n      emoji = \"🫐\";\n      break;\n    }\n    case \"green\": {\n      emoji = \"🍈\";\n      break;\n    }\n    case \"dark\": {\n      emoji = \"🍇\";\n      break;\n    }\n    default: {\n      emoji = \"🌿\";\n    }\n  }\n\n  return emoji;\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { SettingsContext } from '../Settings';\n\nexport default function SettingsView(props: {onUpdate: (theme: string) => void, updateCompact: (sidebarCompact: boolean) => void}) {\n  const settings = useContext(SettingsContext);\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\n  const [compactSidebar, setCompactSidebar] = useState(settings.sidebarCompact);\n\n  useEffect(() => {\n    if (settings.theme !== selectedTheme) {\n      props.onUpdate(selectedTheme)\n    }\n  }, [selectedTheme, props, settings]);\n\n  useEffect(() => {\n    if (settings.sidebarCompact !== compactSidebar) {\n      props.updateCompact(compactSidebar)\n    }\n  }, [compactSidebar, props, settings]);\n\n  return (\n    <div>\n      <h1>Settings</h1>\n      <h2>Theme</h2>\n      <form>\n        <div className=\"theme-radio\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"theme\"\n              value=\"light\"\n              checked={selectedTheme===\"light\"}\n              onChange={() => setSelectedTheme(\"light\")}\n              className=\"theme-radio-input\"\n            />\n            Light\n          </label>\n        </div>\n        <div className=\"theme-radio\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"theme\"\n              value=\"blue\"\n              checked={selectedTheme===\"blue\"}\n              onChange={() => setSelectedTheme(\"blue\")}\n              className=\"theme-radio-input\"\n            />\n            Blue\n          </label>\n        </div>\n        <div className=\"theme-radio\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"theme\"\n              value=\"green\"\n              checked={selectedTheme===\"green\"}\n              onChange={() => setSelectedTheme(\"green\")}\n              className=\"theme-radio-input\"\n            />\n            Green\n          </label>\n        </div>\n        <div className=\"theme-radio\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"theme\"\n              value=\"red\"\n              checked={selectedTheme===\"red\"}\n              onChange={() => setSelectedTheme(\"red\")}\n              className=\"theme-radio-input\"\n            />\n            Red\n          </label>\n        </div>\n        <div className=\"theme-radio\">\n          <label>\n            <input\n              type=\"radio\"\n              name=\"theme\"\n              value=\"dark\"\n              checked={selectedTheme===\"dark\"}\n              onChange={() => setSelectedTheme(\"dark\")}\n              className=\"theme-radio-input\"\n            />\n            Dark\n          </label>\n        </div>\n      </form>\n      <h2>Compact Sidebar</h2>\n      <label><input type=\"checkbox\" checked={compactSidebar} onChange={() => setCompactSidebar(!compactSidebar)} /> Compact sidebar</label>\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport Fuse from 'fuse.js'\nimport { Recipe } from '../models';\nimport CookbookView from './CookbookView';\n\nconst options = {\n  includeScore: true,\n  keys: [\n    {\n      name: 'title',\n      weight: .25\n    }, {\n      name: 'tags',\n      weight: .35\n    }, {\n      name: 'ingredients',\n      weight: .35\n    }, {\n      name: 'steps',\n      weight: .05\n    }]\n}\n\n\nexport function SearchView(props: {recipes: Recipe[]}) {\n  const [searchText, setSearchText] = useState(\"\");\n  const [filteredRecipes, setFilteredRecipes] = useState(props.recipes);\n\n\n\n  useEffect(() => {\n    const fuse = new Fuse(props.recipes, options)\n    const res = fuse.search(searchText)\n\n    // hopefully the lib already sorts by score lol\n    const rec = res.map(r => r.item);\n    setFilteredRecipes(rec);\n  }, [props, searchText]);\n\n  const cookbook = {\n    title: \"Results\",\n    body: \"\",\n    recipes: filteredRecipes\n  }\n\n    return (\n        <div>\n          <h1>Search</h1>\n            <input type='text' value={searchText} onChange={(evt) => setSearchText(evt.target.value)}/>\n            <CookbookView {...cookbook} />\n    </div>);\n}","import { AppSettings, getEmoji, SettingsContext } from \"../Settings\";\nimport React, { useContext } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Home, Search, Settings, Tag } from \"react-feather\";\nimport classNames from \"classnames\";\n\nexport default function Sidebar() {\n    const settings = useContext<AppSettings>(SettingsContext);\n    const emoji = getEmoji(settings);\n\n    const c = classNames({\n        \"app-sidebar\": !settings.sidebarCompact,\n        \"app-sidebar-c\": settings.sidebarCompact\n    });\n\n    const t = classNames({\n        \"hidden\": settings.sidebarCompact,\n    });\n\n    return (\n        <nav className={c}>\n        <section className=\"app-sidebar-body\">\n          <Link className=\"app-sidebar-link\" to=\"/\">\n            <Home/> <span className={t}>Home</span>\n          </Link>\n          <Link className=\"app-sidebar-link\" to=\"/tags\">\n            <Tag /> <span className={t}>Tags</span>\n          </Link>\n          <Link className=\"app-sidebar-link\" to=\"/search\">\n            <Search /> <span className={t}>Search</span>\n          </Link>\n          <Link className=\"app-sidebar-link\" to=\"/settings/\">\n            <Settings /> <span className={t}>Settings</span>\n          </Link>\n        </section>\n        <footer className={classNames(\"app-sidebar-footer\", {\"hidden\": settings.sidebarCompact,})}>\n          <i>Cilantro v0</i> &middot; Made with {emoji}\n        </footer>\n      </nav>\n    );\n}","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Recipe } from \"../models\";\nimport CookbookView from \"./CookbookView\";\n\nexport function TagCloudView(props: {index: {[tag: string]: Recipe[]}}) {\n    const tags = [];\n    for(const t in props.index) {\n      tags.push(t);\n    }\n  \n    const tLinks = tags.map((t, i) => {\n      const url = \"/tags/\" + t\n      return <span key={i}><Link to={url}>{t}</Link>{(i + 1) !== tags.length ? \",\" : \"\"}</span>;\n    });\n  \n    return <div>\n        <h1>Tags</h1>{tLinks}</div>\n  }\n  \nexport function TagPageWrapper(props: {index: {[tag: string]: Recipe[]}}) {\n    const { tag } = useParams<{ tag: string }>();\n    const tagbookData = {\n      title: tag,\n      body: \"\",\n      recipes: props.index[tag],\n    }\n    return <CookbookView {...tagbookData} />\n  }","import React, { useEffect, useState } from 'react';\n\nimport matter from 'gray-matter'\n\nimport './App.css';\nimport { RecipeWrapper } from './pages/RecipeView';\nimport CookbookView from './pages/CookbookView';\n\nimport {\n  Switch,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\nimport { CookbookData, Recipe } from './models';\nimport SettingsView from './pages/SettingsView';\nimport { SearchView } from './pages/SearchView';\nimport { AppSettings, SettingsContext } from './Settings';\nimport Sidebar from './components/Sidebar';\nimport { TagCloudView, TagPageWrapper } from './pages/TagsView';\n\nfunction parseChowdownMd(id: number, data: string): Recipe {\n  const parsed = matter(data)\n  console.log(parsed)\n\n  const title = parsed.data.title;\n  const tags = parsed.data.tags.split(\",\").map((t: string) => t.trim());\n  const imgUrl = parsed.data.image;\n  const steps = parsed.data.directions;\n  const ingredients = parsed.data.ingredients.map((s: string) => {\n    // want to look for \"N\" or \"N/M\" or \"N and M\" or \"N or M\"\n    return {amount: \"\", item: s}\n  });\n  const serves = parsed.data.yield;\n  const time = parsed.data.time;\n  const sourceURL = parsed.data.source;\n\n  return {\n    id,\n    title,\n    tags,\n    imgUrl,\n    steps,\n    serves,\n    sourceURL,\n    time,\n    ingredients,\n    bodyText: parsed.content\n  }\n\n}\n\nfunction makeTagGroups(recipes: Recipe[]): {[tag: string]: Recipe[]} {\n  const mapping: {[tag: string]: Recipe[]} = {};\n  for (const r of recipes) {\n    for (const t of r.tags) {\n      if (!(t in mapping)) {\n        mapping[t] = [];\n      }\n      mapping[t].push(r)\n    }\n  }\n\n  return mapping\n}\n\nexport default function App() {\n  const [cookbook, setCookbook] = useState<CookbookData>();\n  const [tagIndex, setTagIndex] = useState<{[tag: string]: Recipe[]}>({});\n  const [settings, setSettings] = useState<AppSettings>({\n    dataRootURL: process.env.PUBLIC_URL + \"/recipes/\", indexFile: \"README.md?raw=true\", theme: \"light\", sidebarCompact: true,\n  });\n\n // TODO: This is really bad, but it works.\n  // Fix this when I better understand async again. I wish it was as easy as go.\n  useEffect(() => {\n    async function load() {\n      const resp = await fetch(settings.dataRootURL + settings.indexFile)\n      const data = await resp.text()\n\n      const parsed = matter(data)\n\n      const recipes = parsed.data.recipes.map(async (name: string, i: number) => {\n        const recipeResp = await fetch(settings.dataRootURL + \"recipes/\" + name + \".md?raw=true\")\n        const recipeData = await recipeResp.text()\n        return parseChowdownMd(i, recipeData);\n      });\n\n      Promise.all(recipes).then((rs: any) => {\n        const book = {\n          title: parsed.data.title,\n          body: parsed.content,\n          recipes: rs\n        }\n        setCookbook(book);\n      });\n    }\n    \n    load();\n  }, [settings]);\n\n  useEffect(() => {\n    if (cookbook) {\n      const i = makeTagGroups(cookbook.recipes);\n      setTagIndex(i);\n    }\n  }, [cookbook]);\n\n  if (settings.dataRootURL === \"\") {\n    return <div />\n  } else if (settings.indexFile === \"\") {\n    return <div />\n  } \n\n  if (cookbook === undefined) {\n    return <div>Loading...</div>\n  }\n\n  function updateTheme(theme: string) {\n    console.log(theme);\n    setSettings({...settings, theme})\n  }\n\n  function updateCompact(sidebarCompact: boolean) {\n    setSettings({...settings, sidebarCompact})\n  }\n\n  return (\n    <SettingsContext.Provider value={settings}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <div className={\"app app-theme-\" + settings.theme}>\n          <Sidebar />\n          <main className=\"app-content\">\n            <Switch>\n              <Route path=\"/r/:id\">\n                <RecipeWrapper recipes={cookbook.recipes}/>\n              </Route>\n              <Route path=\"/tags/:tag\">\n                <TagPageWrapper index={tagIndex}/>\n              </Route>\n              <Route path=\"/tags/\">\n                <TagCloudView index={tagIndex} />\n              </Route>\n              <Route path=\"/search/\">\n                <SearchView recipes={cookbook.recipes}/>\n              </Route>\n              <Route path=\"/settings/\">\n                <SettingsView onUpdate={updateTheme} updateCompact={updateCompact} />\n              </Route>\n              <Route path=\"/\">\n                <CookbookView {...cookbook} />\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </HashRouter>\n    </SettingsContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}